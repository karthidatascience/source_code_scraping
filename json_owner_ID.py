import ijson

file_path = r"C:\Users\karthim.OCNHOU\Downloads\Montgomery-protaxExport-20240613.json"
output_file = 'owner_id_mcad.txt'

with open(file_path, 'r') as file, open(output_file, 'w') as output:
    output.write('pID|pDetailID|pImprovementID|imprvDetailType|sequence|characteristicOverride|style|quality|class|structure|finishoutPct|units|stories|conditionOverride|imprvCondition|actualYearBuilt|effYearBuilt|age|deprec|deprecGood|pricingModel|overridePricingModel|pricingModelNote|pricingUnitPrice|specialUnitPrice|specialUnitPriceNote|pricingMethod|sketchArea|manualArea|areaSource|area|wallHeightInterior|wallHeightExterior|dimensionLength|dimensionWidth|loadingDockHeight|length|width|height|adjOverride|economicAdj|economicNote|functionalAdj|functionalNote|physicalAdj|physicalNote|pctComplete|pctCompleteNote|imprvDetailModifier|replacementCostNew|adjustedValue|flatValue|valueSource|improvementDetailValue|perimeter|manualPerimeter|sketchPerimeter|perimeterSource|nodes|arcs|newValueIndicator|newValue|newValueOverrideIndicator|exteriorWall|improvementDetailComment|overrideDeprec|deprecNote|useUpForPctBase|\n')
    parser = ijson.items(file, 'item')
    for item in parser:
        pID = item.get('pID')
        valuations = item.get('valuations', [])
        for valuation in valuations:
            # Check if 'details', 'cost-local', and 'improvements' keys exist
            details = valuation.get('details', {})
            cost_local = details.get('cost-local', {})
            improvements = cost_local.get('improvements', [])
            for improvement in improvements:
                improvement_details = improvement.get('details', [])
                for detail in improvement_details:
                    # print(detail)
                    pDetailID = detail.get('pDetailID', 'N/A')

                    pImprovementID = detail.get('pImprovementID', 'N/A')
                    imprvDetailType = detail.get('imprvDetailType', 'N/A')
                    sequence = detail.get('sequence', 'N/A')
                    characteristicOverride = detail.get('characteristicOverride', 'N/A')
                    style = detail.get('style', 'N/A')
                    quality = detail.get('quality', 'N/A')
                    class_ = detail.get('class', 'N/A')
                    structure = detail.get('structure', 'N/A')
                    finishoutPct = detail.get('finishoutPct', 'N/A')
                    units = detail.get('units', 'N/A')
                    stories = detail.get('stories', 'N/A')
                    conditionOverride = detail.get('conditionOverride', 'N/A')
                    imprvCondition = detail.get('imprvCondition', 'N/A')
                    actualYearBuilt = detail.get('actualYearBuilt', 'N/A')
                    effYearBuilt = detail.get('effYearBuilt', 'N/A')
                    age = detail.get('age', 'N/A')
                    deprec = detail.get('deprec', 'N/A')
                    deprecGood = detail.get('deprecGood', 'N/A')
                    pricingModel = detail.get('pricingModel', 'N/A')
                    overridePricingModel = detail.get('overridePricingModel', 'N/A')
                    pricingModelNote = detail.get('pricingModelNote', 'N/A')
                    pricingUnitPrice = detail.get('pricingUnitPrice', 'N/A')
                    specialUnitPrice = detail.get('specialUnitPrice', 'N/A')
                    specialUnitPriceNote = detail.get('specialUnitPriceNote', 'N/A')
                    pricingMethod = detail.get('pricingMethod', 'N/A')
                    sketchArea = detail.get('sketchArea', 'N/A')
                    manualArea = detail.get('manualArea', 'N/A')
                    areaSource = detail.get('areaSource', 'N/A')
                    area = detail.get('area', 'N/A')
                    wallHeightInterior = detail.get('wallHeightInterior', 'N/A')
                    wallHeightExterior = detail.get('wallHeightExterior', 'N/A')
                    dimensionLength = detail.get('dimensionLength', 'N/A')
                    dimensionWidth = detail.get('dimensionWidth', 'N/A')
                    loadingDockHeight = detail.get('loadingDockHeight', 'N/A')
                    length = detail.get('length', 'N/A')
                    width = detail.get('width', 'N/A')
                    height = detail.get('height', 'N/A')
                    adjOverride = detail.get('adjOverride', 'N/A')
                    economicAdj = detail.get('economicAdj', 'N/A')
                    economicNote = detail.get('economicNote', 'N/A')
                    functionalAdj = detail.get('functionalAdj', 'N/A')
                    functionalNote = detail.get('functionalNote', 'N/A')
                    physicalAdj = detail.get('physicalAdj', 'N/A')
                    physicalNote = detail.get('physicalNote', 'N/A')
                    pctComplete = detail.get('pctComplete', 'N/A')
                    pctCompleteNote = detail.get('pctCompleteNote', 'N/A')
                    imprvDetailModifier = detail.get('imprvDetailModifier', 'N/A')
                    replacementCostNew = detail.get('replacementCostNew', 'N/A')
                    adjustedValue = detail.get('adjustedValue', 'N/A')
                    flatValue = detail.get('flatValue', 'N/A')
                    valueSource = detail.get('valueSource', 'N/A')
                    improvementDetailValue = detail.get('improvementDetailValue', 'N/A')
                    perimeter = detail.get('perimeter', 'N/A')
                    manualPerimeter = detail.get('manualPerimeter', 'N/A')
                    sketchPerimeter = detail.get('sketchPerimeter', 'N/A')
                    perimeterSource = detail.get('perimeterSource', 'N/A')
                    nodes = detail.get('nodes', 'N/A')
                    arcs = detail.get('arcs', 'N/A')
                    newValueIndicator = detail.get('newValueIndicator', 'N/A')
                    newValue = detail.get('newValue', 'N/A')
                    newValueOverrideIndicator = detail.get('newValueOverrideIndicator', 'N/A')
                    exteriorWall = detail.get('exteriorWall', 'N/A')
                    improvementDetailComment = detail.get('improvementDetailComment', 'N/A')
                    overrideDeprec = detail.get('overrideDeprec', 'N/A')
                    deprecNote = detail.get('deprecNote', 'N/A')
                    useUpForPctBase = detail.get('useUpForPctBase', 'N/A')
                    print(f'{pID}|{pDetailID}|{pImprovementID}|{imprvDetailType}|{sequence}|{characteristicOverride}|{style}|{quality}|{class_}|{structure}|{finishoutPct}|{units}|{stories}|{conditionOverride}|{imprvCondition}|{actualYearBuilt}|{effYearBuilt}|{age}|{deprec}|{deprecGood}|{pricingModel}|{overridePricingModel}|{pricingModelNote}|{pricingUnitPrice}|{specialUnitPrice}|{specialUnitPriceNote}|{pricingMethod}|{sketchArea}|{manualArea}|{areaSource}|{area}|{wallHeightInterior}|{wallHeightExterior}|{dimensionLength}|{dimensionWidth}|{loadingDockHeight}|{length}|{width}|{height}|{adjOverride}|{economicAdj}|{economicNote}|{functionalAdj}|{functionalNote}|{physicalAdj}|{physicalNote}|{pctComplete}|{pctCompleteNote}|{imprvDetailModifier}|{replacementCostNew}|{adjustedValue}|{flatValue}|{valueSource}|{improvementDetailValue}|{perimeter}|{manualPerimeter}|{sketchPerimeter}|{perimeterSource}|{nodes}|{arcs}|{newValueIndicator}|{newValue}|{newValueOverrideIndicator}|{exteriorWall}|{improvementDetailComment}|{overrideDeprec}|{deprecNote}|{useUpForPctBase}')
                    output.write(f'{pID}|{pDetailID}|{pImprovementID}|{imprvDetailType}|{sequence}|{characteristicOverride}|{style}|{quality}|{class_}|{structure}|{finishoutPct}|{units}|{stories}|{conditionOverride}|{imprvCondition}|{actualYearBuilt}|{effYearBuilt}|{age}|{deprec}|{deprecGood}|{pricingModel}|{overridePricingModel}|{pricingModelNote}|{pricingUnitPrice}|{specialUnitPrice}|{specialUnitPriceNote}|{pricingMethod}|{sketchArea}|{manualArea}|{areaSource}|{area}|{wallHeightInterior}|{wallHeightExterior}|{dimensionLength}|{dimensionWidth}|{loadingDockHeight}|{length}|{width}|{height}|{adjOverride}|{economicAdj}|{economicNote}|{functionalAdj}|{functionalNote}|{physicalAdj}|{physicalNote}|{pctComplete}|{pctCompleteNote}|{imprvDetailModifier}|{replacementCostNew}|{adjustedValue}|{flatValue}|{valueSource}|{improvementDetailValue}|{perimeter}|{manualPerimeter}|{sketchPerimeter}|{perimeterSource}|{nodes}|{arcs}|{newValueIndicator}|{newValue}|{newValueOverrideIndicator}|{exteriorWall}|{improvementDetailComment}|{overrideDeprec}|{deprecNote}|{useUpForPctBase}\n')
